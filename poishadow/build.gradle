plugins {
    id 'java' // java plugin must be explicitly applied for shadow plugin
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

configurations {
    implementation {
        // log4j-2.25.0 regressed on JDK 8 support
        // https://github.com/apache/logging-log4j2/issues/3754
        exclude group: 'com.github.spotbugs', module: 'spotbugs-annotations'
    }
}

dependencies {
    implementation 'org.apache.poi:poi-ooxml:5.4.1'
    implementation 'org.apache.poi:poi-scratchpad:5.4.1'
    implementation 'com.fasterxml:aalto-xml:1.3.3'
    implementation 'stax:stax-api:1.0.1'
    // See https://github.com/apache/logging-log4j2/issues/2129 for an issue in 2.22.x
    // we may need to report issues again in the future if changes break on Android
    implementation 'org.apache.logging.log4j:log4j-api:2.25.1'
}

shadowJar {
    // Apache POI uses service-files for Extractors, Renderers, ...
    mergeServiceFiles {
        // merging relocates some files, so exclude these as we want to keep them in place
        exclude 'META-INF/services/javax.xml.stream.*'
    }

    exclude 'repackage/**'

    exclude 'LICENSE.txt'
    exclude 'NOTICE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/maven/**'

    // these would cause warnings because the referenced classes are not available on Android
    // because of this the System.setProperty() is needed as a workaround
    exclude 'META-INF/services/javax.xml.stream.XMLEventFactory'
    exclude 'META-INF/services/javax.xml.stream.XMLInputFactory'
    exclude 'META-INF/services/javax.xml.stream.XMLOutputFactory'

    // these are only needed when handling Visio files, remove it if you would like to use Visio support
    dependencies {
        exclude(dependency('com.github.virtuald:curvesapi'))
        exclude(dependency('commons-codec:commons-codec'))
        exclude(dependency('org.apache.commons:commons-lang3'))
    }

    // Relocate javax dependencies so Android does not choke
    relocate 'javax.xml.namespace', 'org.apache.poi.javax.xml.namespace'
    relocate 'javax.xml.stream', 'org.apache.poi.javax.xml.stream'
    relocate 'javax.xml.XMLConstants', 'org.apache.poi.javax.xml.XMLConstants'

    // java.awt is not available, but class Color is used in APIs in POI, therefore
    // relocate this class to another one where we can include a rewrite
    relocate 'java.awt.font.FontRenderContext', 'org.apache.poi.java.awt.font.FontRenderContext'
    relocate 'java.awt.font.TextLayout', 'org.apache.poi.java.awt.font.TextLayout'
    relocate 'java.awt.geom.AffineTransform', 'org.apache.poi.java.awt.geom.AffineTransform'
    relocate 'java.awt.geom.Dimension2D', 'org.apache.poi.java.awt.geom.Dimension2D'
    relocate 'java.awt.image.BufferedImage', 'org.apache.poi.java.awt.image.BufferedImage'
    relocate 'java.awt.Color', 'org.apache.poi.java.awt.Color'
    relocate 'java.awt.Dimension', 'org.apache.poi.java.awt.Dimension'

    relocate 'javax.imageio.ImageIO', 'org.apache.poi.javax.imageio.ImageIO'
    relocate 'javax.imageio.ImageReader', 'org.apache.poi.javax.imageio.ImageReader'
    relocate 'javax.imageio.stream.ImageInputStream', 'org.apache.poi.javax.imageio.stream.ImageInputStream'
    relocate 'javax.imageio.metadata.IIOMetadata', 'org.apache.poi.javax.imageio.metadata.IIOMetadata'
}

jar.dependsOn shadowJar
test.dependsOn shadowJar
